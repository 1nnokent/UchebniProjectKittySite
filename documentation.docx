## main.py


// Пользователь:
- **registration_page()**: 
  - **Назначение**: Обрабатывает регистрацию пользователей и отображает шаблон `registration.html`.
  - **Переменные**: 
    - `code`: Код результата регистрации.
  - **Описание**: Если метод запроса - GET, отображает страницу регистрации. Если метод запроса - POST, обрабатывает данные формы, добавляя пользователя в базу данных.

- **authorization_page()**: 
  - **Назначение**: Обрабатывает авторизацию пользователей и отображает шаблон `authorization.html`.
  - **Переменные**: 
    - `failed`: Флаг неудачной авторизации.
    - `problem`: Сообщение об ошибке.
    - `info`: Данные формы авторизации.
    - `password_input`: Пароль, полученный из базы данных.
    - `person_id`: ID пользователя.
  - **Описание**: Проверяет логин и пароль пользователя, перенаправляет на личную страницу (шаблон `user.html`) или отображает сообщение об ошибке.

- **personal_user_page(user_id)**: 
  - **Назначение**: Отображает личную страницу пользователя.
  - **Переменные**: 
    - `user_id`: ID пользователя.
    - `info`: Информация о пользователе.
  - **Описание**: Получает информацию о пользователе из базы данных и отображает ее на странице личного кабинета (шаблон `user.html`).


// Общие страницы:
- **first_page()**: 
  - **Назначение**: Отображает главную страницу (шаблон `yandex.html`).
  - **Переменные**: 
    - `amount`: Количество вариантов, полученное из базы данных.
  - **Описание**: Выполняет SQL-запрос для получения количества вариантов и передает это значение в шаблон `yandex.html`.

- **blank_page()**: 
  - **Назначение**: Возвращает пустую страницу (шаблон `blank.html`).
  - **Описание**: Просто возвращает шаблон пустой страницы (необходим для отладки и недоступен для пользователей).

- **error_page()**: 
  - **Назначение**: Отображает страницу ошибки (шаблон `error_page.html`).
  - **Описание**: Возвращает шаблон страницы ошибки.

  - **test_page()**: 
  - **Назначение**: Отображает тестовую страницу.
  - **Переменные**: 
    - `problems`: Список задач.
  - **Описание**: Получает все задачи и отображает их на тестовой странице.

- **test_page()**: 
  - **Назначение**: Отображает тестовую страницу (шаблон `test.html`).
  - **Переменные**: 
    - Зависит от тестируемого материала.
  - **Описание**: Используется для тестирования тех страниц, которые ещё нуждаются в доработке (пользователь не может просматривать эту страницу).


// Курсы:
- **course_main_page()**: 
  - **Назначение**: Отображает главную страницу курсов (шаблон `courses_page.html`).
  - **Переменные**: 
    - `courses`: Список курсов.
  - **Описание**: Получает все открытые курсы и отображает их на странице.

- **course_page(course_id)**: 
  - **Назначение**: Отображает страницу конкретного курса (шаблон `course_page.html`).
  - **Переменные**: 
    - `course_id`: ID курса.
    - `materials`: Учебные материалы курса.
    - `variant_id`: ID варианта курса.
  - **Описание**: Получает материалы и варианты курса по его ID и отображает их на странице.

- **add_course()**: 
  - **Назначение**: Вывод страницы с формой для добавления курса в базу данных (шаблон `add_course.html`).
  - **Переменные**: 
    - `info`: Данные формы.
    - `course_id`: ID нового курса.
  - **Описание**: В зависимости от метода запроса (GET или POST) отображает страницу добавления курса или обрабатывает данные формы, добавляя новый курс в базу данных.

- **edit_course(course_id)**: 
  - **Назначение**: Выводит страницу с формой для редактирования курса (шаблон `edit_course.html`).
  - **Переменные**: 
    - `course_id`: ID курса.
    - `learning_materials`: Учебные материалы курса.
    - `info`: Данные формы.
    - `operation`: Операция добавления или удаления материала.
  - **Описание**: В зависимости от метода запроса (GET или POST) отображает страницу редактирования курса или обрабатывает данные формы, изменяя материалы курса.

- **variant_page_fc(course_id, variant_id)**: 
  - **Назначение**: Отображает страницу варианта в контексте курса (шаблон `variant_page_fc.html`).
  - **Переменные**: 
    - `course_id`: ID курса.
    - `variant_id`: ID варианта.
    - `kwargs`: Параметры для страницы варианта.
  - **Описание**: В зависимости от метода запроса (GET или POST) отображает страницу варианта курса или обрабатывает данные формы, добавляя ответы на вариант. Необходимо разграничивать обычную страницу с вариантом и страницу с вариантом в контексте курса, ведь не все варианты должны быть общедоступными.

  - **edit_course_variant(course_id)**: 
  - **Назначение**: Редактирует вариант курса.
  - **Переменные**: 
    - `course_id`: ID курса.
    - `variant`: Вариант курса.
    - `info`: Данные формы.
  - **Описание**: В зависимости от метода запроса (GET или POST) отображает страницу редактирования варианта курса или изменяет вариант курса.



// Варианты:
- **variant_page(variant_id)**: 
  - **Назначение**: Отображает страницу варианта.
  - **Переменные**: 
    - `variant_id`: ID варианта.
    - `kwargs`: Параметры для страницы варианта.
  - **Описание**: В зависимости от метода запроса (GET или POST) отображает страницу варианта или обрабатывает данные формы, добавляя ответы на вариант.

- **add_variant()**: 
  - **Назначение**: Добавляет новый вариант.
  - **Переменные**: 
    - `info`: Данные формы.
    - `variant_id`: ID нового варианта.
  - **Описание**: В зависимости от метода запроса (GET или POST) отображает страницу добавления варианта или обрабатывает данные формы, добавляя новый вариант в базу данных.

- **edit_variant(variant_id)**: 
  - **Назначение**: Редактирует существующий вариант.
  - **Переменные**: 
    - `variant_id`: ID варианта.
    - `kwargs`: Параметры для страницы варианта.
    - `info`: Данные формы.
    - `display_mode`: Режим отображения варианта.
    - `problem_id`: ID задачи.
    - `mmax`: Максимальное количество задач.
  - **Описание**: В зависимости от метода запроса (GET или POST) отображает страницу редактирования варианта или обрабатывает данные формы, изменяя режим отображения и добавляя/удаляя задачи из варианта.



// Задачи:
- **problems_page()**: 
  - **Назначение**: Отображает страницу со списком задач.
  - **Переменные**: 
    - `problems`: Список задач.
  - **Описание**: Получает все задачи и отображает их на странице.

- **edit_problem(problem_id)**: 
  - **Назначение**: Редактирует задачу.
  - **Переменные**: 
    - `problem_id`: ID задачи.
    - `problem`: Информация о задаче.
    - `info`: Данные формы.
  - **Описание**: В зависимости от метода запроса (GET или POST) отображает страницу редактирования задачи или обновляет задачу в базе данных.

- **add_problem()**: 
  - **Назначение**: Добавляет новую задачу.
  - **Переменные**: 
    - `info`: Данные формы.
  - **Описание**: В зависимости от метода запроса (GET или POST) отображает страницу добавления задачи или обрабатывает данные формы, добавляя новую задачу в базу данных.

// Форум:
- **forum_main_page()**: 
  - **Назначение**: Отображает главную страницу форума.
  - **Переменные**: 
    - `discussions`: Список обсуждений.
  - **Описание**: Получает все обсуждения и отображает их на главной странице форума.

- **forum_topic_page(topic_id)**: 
  - **Назначение**: Отображает страницу темы форума.
  - **Переменные**: 
    - `topic_id`: ID темы.
    - `topic_name`: Название темы.
    - `messages`: Сообщения темы.
    - `info`: Данные формы.
  - **Описание**: В зависимости от метода запроса (GET или POST) отображает страницу темы или добавляет новое сообщение в тему.

// Группы:
- **group_main_page()**: 
  - **Назначение**: Отображает главную страницу групп.
  - **Переменные**: 
    - `groups`: Список групп.
  - **Описание**: Получает все группы и отображает их на странице.

- **group_page(group_id)**: 
  - **Назначение**: Отображает страницу группы.
  - **Переменные**: 
    - `group_id`: ID группы.
    - `members`: Участники группы.
    - `courses`: Курсы группы.
    - `assignments`: Задания группы.
  - **Описание**: В зависимости от метода запроса (GET или POST) отображает страницу группы или обрабатывает данные формы.

// Учебные материалы:
- **learning_materials_page()**: 
  - **Назначение**: Отображает страницу с учебными материалами.
  - **Переменные**: 
    - `materials`: Учебные материалы.
  - **Описание**: Получает все учебные материалы и отображает их на странице.

- **learning_material_page(material_id)**: 
  - **Назначение**: Отображает страницу конкретного учебного материала.
  - **Переменные**: 
    - `material_id`: ID учебного материала.
    - `material`: Учебный материал.
  - **Описание**: Получает учебный материал по ID и отображает его на соответствующей странице.

## Шаблоны страниц

### templates/variants

- **edit_variant.html**: Страница редактирования варианта. Включает формы для редактирования и добавления задач к варианту.
- **variant_page.html**: Страница тестирования, отображает задачи и позволяет пользователю отправлять ответы.
- **add_variant.html**: Страница добавления нового варианта, содержит форму для ввода информации о варианте.
- **variant_list.html**: Страница со списком вариантов, отображает все доступные варианты для редактирования.

### templates/courses

- **edit_course.html**: Страница редактирования курса, позволяет добавлять и удалять учебные материалы.
- **edit_course_variant.html**: Страница редактирования варианта курса, позволяет изменять связанный вариант.
- **variant_page_fc.html**: Страница тестирования в контексте курса, отображает задачи и позволяет отправлять ответы.
- **course_page.html**: Страница курса, отображает информацию о курсе и связанные материалы.
- **courses_page.html**: Страница со списком всех курсов, позволяет просматривать и выбирать курсы.
- **add_course.html**: Страница добавления нового курса, содержит форму для ввода информации о курсе.
- **buttons_for_cp.html**: Шаблон кнопок для страницы курса, включает элементы управления для взаимодействия с курсом.

### templates/problems

- **edit_problem.html**: Страница редактирования задачи, позволяет изменять параметры задачи.
- **problem_list.html**: Страница со списком заданий, отображает все задачи.
- **add_problem.html**: Страница добавления новой задачи, содержит форму для ввода информации о задаче.

### templates/materials

- **learning_materials.html**: Страница с учебными материалами, отображает все доступные материалы.
- **learning_video.html**: Страница с видео, отображает видеофайлы.
- **learning_conspect.html**: Страница с конспектом, отображает PDF-документы.
- **learning_presentation.html**: Страница с презентацией, отображает презентации.

### templates/groups

- **group_page.html**: Страница группы, отображает участников, курсы и задания группы.
- **group_main.html**: Страница "Мои группы", отображает все группы пользователя.

### templates/forum

- **forum_topic_page.html**: Страница темы форума, отображает сообщения и позволяет добавлять новые.
- **forum_main_page.html**: Главная страница форума, отображает все темы и позволяет создавать новые.

### templates/user_account_pages

- **user.html**: Страница личного кабинета пользователя, отображает информацию о пользователе и предоставляет доступ к различным функциям аккаунта.
- **registration.html**: Страница регистрации, содержит форму для ввода данных нового пользователя.
- **registration_end.html**: Страница завершения регистрации, подтверждает успешную регистрацию пользователя.
- **authorization.html**: Страница авторизации, содержит форму для ввода логина и пароля.
- **authorization_failed.html**: Страница ошибки авторизации, отображает сообщение об ошибке при неудачной попытке входа.

### templates/error_pages

- **error_registration_user_exists.html**: Страница ошибки регистрации, отображает сообщение о том, что пользователь с таким логином уже существует.
- **authorization_user_not_found_error.html**: Страница ошибки авторизации, отображает сообщение о том, что пользователь не найден.
- **error_page.html**: Общая страница ошибки, отображает сообщение об ошибке.
- **authorization_failed.html**: Страница ошибки авторизации, отображает сообщение об ошибке при неудачной попытке входа.

### templates

- **yandex.html**: Главная страница, отображает основную информацию и навигацию по сайту.
- **test.html**: Тестовая страница, используется для отладки и тестирования.
- **blank.html**: Пустая страница, может использоваться как шаблон для новых страниц.
- **header.html**: Шаблон заголовка, включается в другие страницы для отображения общего заголовка и навигации.

## database_requests.py

- **sql_execute(sql_request)**: 
  - **Назначение**: Выполняет SQL-запрос.
  - **Переменные**: 
    - `sql_request`: Строка SQL-запроса.
  - **Описание**: Использует курсор для выполнения запроса и возвращает результат.

- **user_select_to_dict(tuple_info)**: 
  - **Назначение**: Преобразует информацию о пользователе из кортежа в словарь.
  - **Переменные**: 
    - `tuple_info`: Кортеж с информацией о пользователе.
    - `dict`: Словарь с преобразованной информацией.
  - **Описание**: Извлекает данные из кортежа, выполняет дополнительные запросы для получения связанных данных (например, роль, школа) и формирует словарь.

- **get_problems()**: 
  - **Назначение**: Возвращает список всех задач из базы данных.
  - **Переменные**: 
    - `problems`: Список задач.
    - `ret`: Список для возврата.
  - **Описание**: Выполняет SQL-запрос для получения всех задач и формирует список для возврата. 
